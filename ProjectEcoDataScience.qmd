---
toc: FALSE
format:
  html: default
  pdf: default
  arxiv-pdf:
    keep-tex: true
engine: knitr
bibliography: bibliography.bib
title: From Text to Insight - A Novel Approach to Measuring Business Model Innovation
short-title: Hope
author:
  - name: Max Gabler
    email: max.gabler@uni-ulm.de
  - name: Wanshu Jiang
    email: wanshu.jiang@uni-ulm.de
  - name: Christoph Kiesl
    email: christoph.kiesl@uni-ulm.de
#    affiliation:
#      name: Institute for Clarity in Documentation
#      address: P.O. Box 1212
#      city: Dublin
#      state: Ohio
#      country: USA
#      postal-code: 43017-6221
  - name: Leonard PÃ¶hls
    email: leonard.poehls@uni-ulm.de
  - name: Alexander Rieber
    email: alexander.rieber@uni-ulm.de
#    affiliation:
#      name: 
#      address: 
#      city:
#      state:
#      country:
  - name: Ansgar Scherp
    email: ansgar.scherp@uni-ulm.de
#    affiliation:
#      name:
#      address:
#      city:
#      state: 
#      country:
keywords:
    - 10-K
    - Business Model Innovation
    - BERT
    - Gemini
  # teaser:
  #   image: sampleteaser
  #   caption: figure caption
  #   description: teaser description    
abstract: |
 The ability of a company to continuously innovate its business model is a pivotal determinant of long-term success in dynamic markets. It is therefore crucial to ensure the reliability of business model innovation  measurement. In this study, we utilise business descriptions from 10-K filings between 2017 and 2023 to measure business model innovation. We find that (...). These findings offer insights into the extent to which textual similarities in regulatory reports can be employed as a reliable indicator for business model innovation. Thus, this method represent a novel approach to analyzing business model innovation over time.
---
{{< pagebreak >}}

```{r eval = FALSE, echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
library(knitr)
library(glue)
library(gt)
if(!require(webshot2)) warning("you'll need this")
knit_print.gt_tbl = function(x, ...) {
  
  if(!knitr::is_latex_output()){
    return(gt:::knit_print.gt_tbl(x, ...))
  } 
  
  f <- glue("{opts_current$get('label')}-gt_tbl.png")
  x |> gtsave(filename=f, 
  zoom = 1,expand=5)
size <- dim(png::readPNG(f)) # overkill, probably better ways with magic
  knitr::asis_output(glue("\\centering\\includegraphics[width=<size[1]>\\pixel,height=<size[2]>\\pixel]{<f>}", .open="<",.close=">"))
}
registerS3method(
  "knit_print", "gt_tbl", knit_print.gt_tbl,
  envir = asNamespace("knitr")
)
```


# Introduction

Business model innovation (BMI) is a key activity to maintain competitiveness and even gain a competitive advantage in todays fast paced markets [@pucihar_drivers_2019; @teece_business_2018]. It is therefore no surprise that the interest in BMI has grown rapidly over the last twenty years. In particular, research examining the impact of BMI on firm performance has been a prominent area of investigation, with numerous research papers published in this field [@cucculelli_business_2015; @latifi_business_2021; @zott_fit_2008; @white_exploring_2022]. While the financial literature offers a  wide range of established methods for measuring a company's performance, the BMI literature provides only a limited number of measures, all of which face similar challenges [@white_exploring_2022]. Furthermore, these measures vary largely. In order to further validate and advance the BMI research field, more sophisticated and comprehensive measurement instruments are necessary [@huang_review_2023].

Scales and measures used in the BMI literature [@clauss_measuring_2017;@spieth_business_2016] provide managers and practitioners with a measurement index for business model innovativeness. But these measures only validate applicability of BMI theory [@huang_review_2023] and are insufficient for longitudinal studies [@clauss_measuring_2017]. Hence, these measures are not adequate for a time series analysis of BMI. We address this gap by proposing a novel approach to measuring BMI. US-based companies are obliged by the United States Security and Exchange Commission (SEC) to submit annual 10-K filings, wherein a detailed description of the company's business operations is required. Hoberg & Phillips [-@hoberg_text-based_2016], on which we build this study, use these filings to cluster companies into industries. We, on the other hand, summarize these descriptions with Gemini and calculate the BERTScore between the summaries of different years for a single company. This approach enables the measurement of changes in the business model (BM) over time as the distance between the BM summary of one year to another. In order to test the validity of our measure, we regress revenue growth and Tobins Q on our measure. Additionally, we create our own industry classification based on BERTScores of business descriptions of same firms within the same year.

-   Key findings and Contribution

The SEC mandates that the majority of public companies based in the United States submit an annual 10-K filing. In the first section under the subtitle "Business," a company presents its general business, encompassing information about its products and services. In some instances additional topics may be addressed, such as labor issues or competition [@sec_investor_2024]. In conclusion, this section contains the most useful information for describing a company's BM [@lee_business_2014]. Furthermore, 10-K filings are a reliable source of information, given that US law prohibits false or misleading statements in the filings. The SEC monitors the compliance of the companies with the requirements and comments where disclosure appears to be inconsistent [@sec_investor_2024]. Because of these guidelines, these descriptions are particularly suitable for a text analysis in order to quantify a BM. We therefore compare the text similarities of the same companies over several years and find that above-average changes in the texts have a significantly positive effect on performance measures such as revenue growth and Tobins Q. However, BMI affects companies of different sizes differently, which is why we classify company size based on turnover and find that the larger the company, the smaller the effect of BMI on company performance.

-   paragraph 5 (robustness checks)

Despite the growing interest in BMI and the increasing number of theoretical and empirical studies in this field, the research of BMI is still in a preliminary state [@huang_review_2023]. Consequently, there is considerable variation in the definitions of BMI, with some definitions being more similar to one another than others [@foss_fifteen_2017]. Spieth & Schneider [-@spieth_business_2016] identify three core dimensions that comprise a company's BM: its value proposition, its value creation architecture and its revenue model logic. Based on this, BMI can be conceptualized as a change that is new-to-the-firm in at least one of these dimensions. Furthermore, Spieth and Schneider [-@spieth_business_2016] introduce a measurement model to evaluate these three dimensions of BMI. They develop an index by first specifying the contents, followed by a specification of the indicators and assessing their content validity, assessing the indicators collinearity and finally assessing the external validity. Clauss [-@clauss_measuring_2017] employs a very similar approach. After specifying the domain and dimensionality of BMI through literature research, the author divides his scale into three hierarchical levels, which are very similar to the ones of Spieth and Schneider [-@spieth_business_2016]. We build on these conceptualizations to design our prompt we use in the pre-processing with Gemini. However, both measures are subject to three significant limitations. Firstly, both measures lack a temporal component. Consequently, they are inadequate for use in longitudinal studies or ex-post evaluations of BMI. Secondly, BMI is only measured at the new-to-the-firm level rather than at the new-to-the-industry or new-to-the-market level. Thirdly, both measures rely on interviews and questionnaires, which makes conducting large-scale studies time-consuming and reliant on the willingness of the companies to cooperate [@clauss_measuring_2017; @spieth_business_2016]. Our novel measurement approach tackles the first and third issue. 

A number of studies have examined the relationship between BMI and the financial performance of a company. Cucculelli & Bettinelli [-@cucculelli_business_2015] investigate the effect of BMI on sales growth, return on sales (ROS) and total factor productivity (TFP). The results support the hypothesis that BMI has a positive effect on firm performance, with the effect increasing in line with the intensity of the innovation. Desyllas et al. [-@Desyllas2022] find that BMI has a small effect on performance of incumbent firms. They measure firm performance by Tobin's Q growth. White et al. [-@white_exploring_2022] conducted a meta-analysis based on the extant BMI literature. They found a positive relationship between BMI and firm performance, and that this relationship is shaped by factors including the firm age, industry, the economic and political environment and BMI characteristics. Based on this, we derive the dependent and control variables in the estimation strategy.

Hoberg & Phillips [-@hoberg_text-based_2016] present a novel approach to defining industry boundaries. They propose two novel industry classification methods: the fixed industry classification (FIC) and the text-based network industry classification (TNIC). Firstly, they cluster companies based on the similarity of word vectors into fixed industries. Secondly, they define a minimum similarity threshold, above which firms are considered in the same industry. This second step relaxes their prior properties of binary membership transitivity and fixed industry location. The authors demonstrate shortcomings in the traditional industry classification systems such as the Standard Industry Classification (SIC) and the North American Industry Classification System (NAICS), which are not able to account for temporal changes. The new method is capable of capturing changes in industry boundaries and competitor sets over time, thereby providing a dynamic industry classification system. Based on the FIC we propose our own BERTScores industry classification and utilize it in our estimation. In their study, Lee & Hong [-@lee_business_2014] examine the evolution of a firm's BM over time. After filtering the Item 1 parts of the 10-K filings for relevant sentences, Lee & Hong [-@lee_business_2014] construct keyword vectors, which represent the concept of the BM. Therefore, the evolution of the BM is depicted as the change in the distribution of keywords over time. The authors advocate for a more robust methodology, such as incorporating multi-word phrases in the keyword vectors, to enhance the reliability of the approach [@lee_business_2014]. Our study pursues a similar goal but with a novel methodology.

The remainder of the paper is organized as follows. Section 2 describes the origin and preparation of our data, the use and functioning of BERT, the preprocessing with Gemini and our methodology. Section 3 lays out our estimation strategy. Section 4 contains our results and discussion. Section 5 concludes our study.

# Data and Methodology

## The Dataset

We collect 10-K filings from the digital SEC Database, using the category "10-K" as extraction condition. Since the focus of our study lies on company's BM, we merely use the Item 1 part, since this is the most crucial part of the 10-K filings for describing the companies BM [@lee_business_2014]. Our observations are limited to an intersection of such companies, which has been made available to the SEC since 2001 in a publicly accessible database. We extracted 10-K filings that were submitted between 2017 and 2023 based on underlying Central Index Keys (CIK). Occasionally, such filings are submitted retrospectively or are already submitted for the same year. We are therefore limiting the period for which we are reporting to 2016-2023, with fewer observations available for 2016 and 2023 as a result. We exclude companies from the financial sector, namely companies with a SIC Code starting with six. Corresponding to Table 2, multiple steps of pre-processing were required to obtain the final amount of 23,882 observations for seven years. Financial key figures, including revenues, total assets, market values and others were extracted from DataStream. A total of 4,884 companies are included in the sample, although the availability of filings could not always be guaranteed for all years. This is due on the one hand to the quality of the API to the SEC and on the other hand to companies that did not file 10-K reports or were listed on the stock exchange for the entire period under review. Finally, we have access to the financial key figures of the companies for the respective year, the Item I text pre-processed with the help of Gemini, company-specific identification features and the conventional SIC industry classification. The information on SIC sector classification is limited to companies that are currently actively filing. Therefore, 2196 observations are no longer actively filing, e.g. due to company bankruptcies, mergers, etc.

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
library(tidyverse)
library(knitr)
library(kableExtra)
library(readxl)

Table1 = read_excel("./TableData/Table1.xlsx")%>%
  mutate(V3 = as.character(V3))%>%
  replace_na(list(V1="",V2="",V3=""))%>%
  kable(format = 'latex',label="tbl-table1",col.names = c("Source/Filter","Sample Size","Observations Removed"), caption = "10-K Sample Creation", booktabs = T)%>%
  kable_styling(latex_options = c("scale_down","HOLD_position"),full_width = T) %>%
  footnote("Filings submitted between 2017 and 2023 are considered.")%>%
  column_spec(1, width = "8cm")

Table1
```

## BERT and BERTScore

BERT is a pre-trained and transformer-based model for natural language processing (NPL) based on artificial neural networks. It works according to the so-called transformer architecture, which was first mentioned by Vaswani et al. [-@vaswani2017attention]. According to these authors, this architecture consists of two main components, the encoder and the decoder. The encoder consists of several identical layers, which initially use the so-called self-attention mechanism to generate context-dependent representations of each word in the sentence. This mechanism can be parallelized and therefore enables different aspects of the context to be captured in the same way. The decoder, on the other hand, works in a similar way and is responsible for processing the information from the encoder and forming it into an output sequence. However, this is not relevant for BERT, as no sequence-to-sequence transformation is carried out in BERT. In contrast to Hoberg & Philips [-@hoberg_text-based_2016] word-to-vec approach, BERT works bidirectional and takes into account the context from both sides of each word simultaneously. Therefore, BERT is able to capture deeper semantics in texts such as 10-K reports. The BERTScore now computes the cosine similarity between word or text meanings, that have been determined by representations (or embeddings) learned from BERT. The scale is from -1 to 1, where 1 describes a perfect similarity.

- which BERT model do we employ? how do we use it?

## Preprocessing with Gemini

10-K filings are typically very large text documents, and Item 1 of these filings is no exception. Table 2 shows the descriptive measures of the length of the original Item 1 section in our final sample. The length of a document was measured by the word count without punctuation. The document length ranges from a minimum if 49 words up to 78,799 words. On average the documents are between 6,626 and 10,304 words long. In order to utilise the entirety of the information regarding the BM in the Item 1 section and pass the text to our BERT model, we decided to let Google's GenAI chatbot Gemini summarize them to a maximum length of 512 tokens. The summaries were created between 26 June 2024 and 6 August 2024. The model employed was Gemini Flash 1.5. The prompt was inserted at the beginning of each text file and it was passed via an API to Gemini [^1]. Our prompt covers all aspects of the definition of BMI proposed by Spieth & Schneider [-@spieth_business_2016]. For more details, see Appendix A. To assess the quality and accuracy of the summaries produced by Gemini, a random sample of 100 filings was selected for comparison with the original text. More precise,the original file was initially read with a focus on the points mentioned in the prompt. Subsequently, the summary was evaluated to ascertain whether it contained these same points. A list of the sample with the summaries is provided in the Appendix B.

[^1]: We forked and used following Github repository: https://github.com/skranz/gemini_ex.

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
library(tidyverse)
library(knitr)
library(kableExtra)
library(readxl)

Table2 = read_excel("./TableData/Table2.xlsx")%>%
    kable(format="latex",label="tbl-table2",col.names = c("Report-for Year","Average Word Count","Standard Deviation","Minimum","25th Percentile","Median","75th Percentile","Maximum"),booktabs = T, caption = "Descriptive Statistics of Number of Words in Original Filings")%>%
  kable_styling(latex_options = c("scale_down","HOLD_position"))%>%
  footnote("All 23,882 original filings were considered.")

Table2
```

## Methodology

From the dataset containing all the summaries and financials per company per year we construct three datasets for our further analysis. The first dataset is used for the BERTScore industry classification. Therefore, we filter for all summaries of 2017 and for the first available summary of companies which do not appear first in 2017 but in a later year. We then calculate the BERTScores between all these summaries. The second and third dataset are used for the regression analysis of our measure. For the second dataset, we fix the company and calculate the BERTScore of the summaries of one year and its direct consecutive year as well as the sales growth rate. The third dataset contains the Tobin's Q growth calculated as the difference between the natural logarithm of Tobin's Q in the last and the first year of our observed period as well as the BERTScore between the summaries of the respective year of a company.

The first dataset is utilized to compute our BERTScore industry classification. We firstly compare the BERTScore industry classification with the FIC by Hoberg & Phillips [-@hoberg_text-based_2016] and the SIC. Furthermore, we use our BERTScore industry classification in our estimation. For the FIC, Hoberg & Phillips [-@hoberg_text-based_2016] calculate the cosine similarity between word vectors of product descriptions, which they extracted from Item 1 of the 10-K filings. For our Industry classification we utilize the BERTScore to calculate the similarity between our BM summaries. Based on these similarities we cluster the companies into industries via an agglomerative clustering algorithm. The methodology and object of research differ between the two studies. In accordance with the definition provided by Spieth & Schneider [-@spieth_business_2016], a company's product constitutes a component of its value proposition and, consequently, a constituent of the BM. Because the product is thereby entangled with the BM, companies that have similar products might have similar BMs. So despite the different methodology and object of research, we expect a similar distribution as Hoberg for the FIC, which is very granular and contains lot of small industries. Thus, we hypothesize:

  **H1**: Our BERTScore industry classification shows a similar distribution compared to the FIC. 
  
  **H2**: Our BERTScore industry classification has a high overlap with the FIC.

As mentioned, our approach differs from the original paper by Hoberg & Phillips [-@hoberg_text-based_2016]. We fix the company and calculate the BERTScore of the summaries of one year and the following year. When a company innovates its BM over time, the 10-K filings change and thus the summaries of these filings. We subtract the BERTScores from one to get the distance instead of the similarity between summaries, because the distance yields a more intuitive interpretation: The higher the distance, the more do the BM summaries differ. Figure 1 shows the density function of the distance. The distance looks normally distributed and has a mean of 0.104 and a standard deviation of 0.027. The values range from zero to 0.216. This means that on average the summaries of a company differ slightly. We attribute these small differences to our preprocessing rather than that companies on average slightly change their BM every year. Even if the summaries are very similar in terms of content, Gemini might use different phrases and wordings which result in different BERTScores and thereby in a higher distance. Hence, we normalize the distance by dividing by its mean. Furthermore, we subtract one and multiply it by one-hundred in order to further ease the interpretation of the coefficient. This results in the following definition of our measure: 

$$
{NormalizedDistance} = \left( \frac{{Distance}_i}{\frac{1}{n} \sum_{i=0}^{n} {Distance}_i} - 1 \right) \cdot 100
$$

This Normalized Distance measures the change of a company's BM above the market average in percentage points. We assume that a company that changes its BM, will not return back to its original BM. Under this assumption the Normalized Distance measures BMI on the new-to-the-firm level. In the case that our measure is able to measure BMI, we expect to find a positive relationship between our BMI measure and firm performance. Therefore, we hypothesize that:

  **H3**: Our measure for BMI is positively correlated with firm performance.

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
#| label: fig-1
#| echo: false
#| fig-cap: "Density Function of the Distance"
library(tidyverse)
library(ggplot2)

Figure1 <- read.csv("./TableData/Regression/RegressionData.csv")%>%
  select(c("Score")) 

Mean = mean(1-Figure1$Score)
SD = sd(1-Figure1$Score)
min = min(1-Figure1$Score)
max = max(1-Figure1$Score)

Figure1 = Figure1%>%
  ggplot(aes(x=1-Score)) +
  geom_density(alpha = 0.5, fill="grey") +
  labs(caption= "Note:\nOnly distances for same company between different years.",x = "Distance", y = "Density") +
  theme_minimal()+
  geom_vline(xintercept=Mean,alpha=0.8)+
  annotate("text", x=Mean+0.002, y=14.9, label="Mean", angle=90, size= 3)

Figure1
```

# Estimation Strategy

We test H3 using multivariate regression techniques. In all the specifications we use the Normalized Distance which we defined above as the independent variable. In the first specification we employ for measuring the firm performance the sales growth as our dependent variable like Cucculelli & Bettinelli [-@cucculelli_business_2015]. We utilize our second dataset and remove all observations with zero values for the market value and the total assets. Furthermore, we use the z-score to drop extreme growth rates. For a more detailed discussion of this step see Appendix C. In the second specification we use the growth of Tobin's Q as described by Desyllas et al. [-@Desyllas2022]. The third dataset is used for this specification. In both specifications we control for firm size in the first specification with the logarithm of the market value and in the second with the logarithm of the total assets [@dang2018measuring]. In the first specification we use the interaction term of the year and our BERTScore industry classification as fixed effect. We utilize the interaction term of the year and the industry because this captures possible heterogeneous effects of the industry classification between different years. In the second specification we only use industry fixed effects. In the robustness check we use the SIC codes instead of our BERTScore industry classification. We do not control for economical and political environment as White et al. [-@white_exploring_2022] suggest since all of our companies are U.S. based.

# Results and Discussion

## Comparison

Our study builds on the idea of Hoberg & Phillips [-@hoberg_text-based_2016] to utilize text data from 10-K filings to classify companies based on their product similarity into dynamic industries. They achieve this through the parsing of the product descriptions provided by Item 1 of firms 10-K filings and creating word vectors. Specifically, the authors identify and exclude proper nouns, which include common words and geographic locations. They then create word vectors for each firm and year, which enables the measurement of product similarity over time. They perform two steps to create the FIC. Firstly, a hierarchical agglomerative clustering algorithm is employed to cluster companies based on their similarity and maximize ex-post within cluster similarity. This enables a classification with any number of clusters. In the second step, the authors compute aggregated word vectors for each industry. These vectors now represent the industries. Subsequently, the similarity between industries and firms is calculated for each of the following years. From the second year onwards, firms are classified according to the industry with which they are most similar. Our approach differs in two ways: Firstly, in contrast to the TNIC and FIC, which employ word-to-vec, our approach utilises BERT to represent text, which allows us to capture the context of words. Accordingly, the BERTScore is employed instead of the cosine similarity as our similarity measure. Secondly, our analysis is focused on the description of the BM rather than on the product descriptions. Nevertheless, in the following subsection, the BERTScore industry classification is compared with the FIC and the SIC.

We employ the first dataset for the BERTScore industry classification and the comparison. The SIC codes come from the SEC website[^2]. For the FIC we have utilized the similarity scores provided by Hoberg-Phillips Data Library[^3]. The data consists of the gvkeys of two companies, the year and the cosine similarity between these two companies. In order to ensure comparability, only companies present in both the present study's dataset and that provided by the authors are included in the analysis. Because we use CIKs and accession numbers to identify firms and filings, and the fact that the data library employs Compustat's gvkeys, the matching of CIKs with gvkeys inevitably results in the loss of some observations. Ultimately, for the comparison the clustering algorithm was applied to 1,958 of the 3,246 firms in our sample for the year 2017. In our dataset, companies are from 320 different SIC codes. Therefore, for the comparison the number of industries chosen for our industry classification and the FIC is 320.  

Figure 2 compares the distribution of industry size for the BERTScore classification, the FIC and the SIC. Both the BERTScore classification and the FIC show a similar distribution, displaying a leftward skew with the majority of industries comprising fewer than ten firms. The SIC shows as well a left skewed distribution but with most industries only containing one company. The distribution of the FIC is steeper than the one of the BERTScore classification. It is notable that the largest industry in the BERTScore classification comprises only 20 companies, whereas the FIC and SIC contain industries with a greater number of firms, with some exceeding 50. This suggests that the BERTScore classification groups small to medium-sized industries, comprising between two and fourteen firms per industry, with fewer large industries. The FIC also comprises mostly of small to medium-sized industries, with a few larger ones. Despite these minor differences, this supports H1. The degree of homogeneity between the BERTScore classification and the FIC is 0.63, while the completeness is 0.6. This demonstrates only a medium degree of overlap between the two classifications. The Adjusted Rand Index (ARI) [@hubert_comparing_1985] is situated at 0.0002, which is close to zero, indicating that the overlap might be random. These findings do not provide support for H2.

In order to use our BERTScore industry classification in our estimation, we classify all 3,246 companies from the year 2017 as described above. Since we use BERT and do not have word vectors for each industry, our methodology differs in the second step from Hoberg & Phillips [-@hoberg_text-based_2016]. We assign the remaining companies of which we do not have data for the year 2017 to the industry of the company which are already classified and which they are most similar to.

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
#| label: fig-2
#| echo: false
#| fig-cap: "Distribution Comparison between BERT Classification, FIC and SIC"
library(tidyverse)
library(ggplot2)

#Load and edit data
Figure2 = read.csv("./TableData/Figure2.csv") %>%
  mutate(Firms = ifelse(Firms>50,50,Firms))%>%
  mutate(Clustering = ifelse(Clustering == "Hoberg","FIC",Clustering))

#create plot
Figure2 = Figure2 %>%
  ggplot(aes(x = Firms, fill = Clustering)) +
  geom_histogram(alpha = 1, bins = 50, col="grey") +
  scale_x_continuous(breaks = seq(0, 50, by = 5), labels = c(seq(0, 45, by = 5), "50+")) +
  facet_wrap(~ Clustering, ncol = 1) +
  labs(
    x = "Number of Firms in Industry",
    y = "Frequency",
    fill = "Gruppe"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.position = "none"
  )

Figure2
```

[^2]: The list can be found here: https://www.sec.gov/search-filings/standard-industrial-classification-sic-code-list. 
[^3]: For the database see: https://hobergphillips.tuck.dartmouth.edu.

## Results

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
#Main Regression Results
library(tidyverse)
library(stargazer)
library(readxl)
library(lfe)
library(DescTools)

RegressionData = read.csv("./TableData/Regression/RegressionData.csv") %>%
  filter(Market_Value>0, Total.Assets >0)%>%
  mutate(z_score = (RevenueGrowth - mean(RevenueGrowth))/sd(RevenueGrowth)) %>%
  filter(z_score < 3)%>%
  mutate(year=as.factor(year),
         Industry = as.factor(Industry))

#Revenue Growth
Reg1 = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year * Industry | 0 | 0 ,data=RegressionData)
Reg2 = felm(RevenueGrowth~NormalizedDistance + log(Total.Assets) | year * Industry | 0 | 0 ,data=RegressionData)


#Tobin's Q
#Reg5 = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year + Industry | 0 | 0 ,data=RegressionData)
#Reg6 = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year * Industry | 0 | 0 ,data=RegressionData)

stargazer(Reg1, Reg2)
```

## Robustness Checks

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
#Robustness Check
library(tidyverse)
library(stargazer)
library(readxl)
library(lfe)
library(DescTools)

RegressionData = read.csv("./TableData/Regression/RegressionData.csv") %>%
  filter(Market_Value>0, Total.Assets >0)%>%
  mutate(z_score = (RevenueGrowth - mean(RevenueGrowth))/sd(RevenueGrowth)) %>%
  filter(z_score < 3)%>%
  mutate(year=as.factor(year),
         Industry = as.factor(Industry),
         sic = as.factor(sic))

#Revenue Growth
Reg1Robustness = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year * sic | 0 | 0 ,data=RegressionData)
Reg2Robustness = felm(RevenueGrowth~NormalizedDistance + log(Total.Assets) | year * sic | 0 | 0 ,data=RegressionData)

#Tobin's Q
#Reg5Robustness = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year + sic | 0 | 0 ,data=RegressionData)
#Reg6Robustness = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year * sic | 0 | 0 ,data=RegressionData)

stargazer(Reg1Robustness, Reg2Robustness)
```

## Discussion

This study represents an innovative extension of Hoberg & Phillips [-@hoberg_text-based_2016] work regarding their approach. While using the BERT-Score compels us to shorten and condense the descriptions of business models, it integrates semantics into the similarity calculation. As a result, the entire text is considered, which appears to provide better informational value compared to solely relying on frequently occurring nouns. However, one potential critique of BERT is its limited ability to recognize implicit and subtle meanings (1). The approach can only process the textual descriptions. In this work, we exclusively examine business models that provide little insight into current success in practice. Notably, there are no clear objective statements, as with many key financial indicators, that can be categorized as positive or negative. A positive description of negative aspects is unlikely in this context, which justifies the use of the BERT-Score.

The use of BERT, and the consequent limitation regarding text length, posed additional challenges in this research. In recent years, the possibilities for utilizing AI have grown immensely. With the help of GitHub Actions, we were able to obtain suitable access to Gemini. This brings us to the most critical point of this work. This approach raises transparency issues for the results. The system does not provide explainable intelligence, meaning we cannot fully verify how exactly the texts are generated. Our only option is to delegate the task and trust the resultsâ accuracy.

Nevertheless, we consider the current approach as the best possible solution for condensing our business models. On the one hand, the extracted texts do not follow the same structure across companies, and on the other, cutting the business models arbitrarily poses too great a risk. Losing up to 90% of the content would be unacceptable in this case, and due to structural differences, this becomes impossible beyond certain key points. Moreover, the summaries generated by GPT have sometimes been perceived as better than models specifically designed for this purpose (2).
A significant portion of this work involved data collection, which proved to be a major challenge. Due to the lack of access to Compustat, commonly used in financial studies and for SEC-related information, we had to rely on extensive research. Various approaches had to be abandoned as they failed to meet expectations. Nonetheless, we were able to complete our work, though with a few compromises regarding data volume.

# Conclusion

# Acknowledgement

-   Jonathan for IT Support
-   Prof. Kranz for Repo
-   bw unicluster

{{< pagebreak >}}

# References

::: {#refs}
:::

{{< pagebreak >}}

# Appendix

## Appendix A

We used following prompt: "Summarize the business model from the following text. Answer with a continuous text and with five hundred twelve tokens at max. Set your focus on sources of revenue, the intended customer base, products, distribution channels and details of financing. Use only information from the following the text".[^4] "intended customer base" and "product" refer to the value offering, "distribution channels" refers to the value architecture, and "sources of revenue" and "details of financing" refer to the revenue model. The term 'tokens' was used deliberately in preference to 'words', given that the number of tokens and the number of words in a text may vary depending on the tokeniser. This way, we wanted to ensure that the whole summary is used by the BERT model.

-   Descriptive Table3 for length of summaries


[^4]: The spelling error in the last sentence of the prompt was found after processing Item 1. After evaluating the summaries, this error did not cause any issues.

## Appendix B

list of summaries we checked

## Appendix C

explain, why we drop some data points.

show regression without dropped data points

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
#| label: fig-3
#| echo: false
#| fig-cap: "Distribution of the Revenue Growth"
#Boxplot
library(tidyverse)
library(ggplot2)
library(readxl)


RegressionData = read.csv("./TableData/Regression/RegressionData.csv")

Figure3 = RegressionData %>%
  ggplot(aes(y=RevenueGrowth,x=1))+
  geom_boxplot()+
  theme_minimal()+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank())+
    scale_y_log10(breaks=c(0.1,10,100,1000,10000,100000),labels=c("0.1%","10%","100%","1,000%","10,000%","100,000%"))

Figure3
```

```{r echo=FALSE, warning = FALSE, message = FALSE, results='asis'}
#Appendix
RegressionData = RegressionData %>%
  filter(Market_Value>0, Total.Assets>0)%>%
  mutate(year=as.factor(year),
         Industry = as.factor(Industry))

#Revenue Growth
Reg1Appendix = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year * Industry | 0 | 0 ,data=RegressionData)
Reg2Appendix = felm(RevenueGrowth~NormalizedDistance + log(Total.Assets) | year * Industry | 0 | 0 ,data=RegressionData)

#Tobin's Q
#Reg5Appendix = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year + Industry | 0 | 0 ,data=RegressionData)
#Reg6Appendix = felm(RevenueGrowth~NormalizedDistance + log(Market_Value) | year * Industry | 0 | 0 ,data=RegressionData)

stargazer(Reg1Appendix,Reg2Appendix)
```
